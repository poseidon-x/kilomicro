//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace coreLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class coreLoansEntities : DbContext, IcoreLoansEntities
    {
        public coreLoansEntities()
            : base("name=coreLoansEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual IDbSet<asset> assets { get; set; }
        public virtual IDbSet<assetCategory> assetCategories { get; set; }
        public virtual IDbSet<assetDepreciation> assetDepreciations { get; set; }
        public virtual IDbSet<assetDocument> assetDocuments { get; set; }
        public virtual IDbSet<assetImage> assetImages { get; set; }
        public virtual IDbSet<assetSubCategory> assetSubCategories { get; set; }
        public virtual IDbSet<depreciationSchedule> depreciationSchedules { get; set; }
        public virtual IDbSet<jobTitle> jobTitles { get; set; }
        public virtual IDbSet<staffAddress> staffAddresses { get; set; }
        public virtual IDbSet<staffDocument> staffDocuments { get; set; }
        public virtual IDbSet<staffEmail> staffEmails { get; set; }
        public virtual IDbSet<staffImage> staffImages { get; set; }
        public virtual IDbSet<staffPhone> staffPhones { get; set; }
        public virtual IDbSet<allowanceType> allowanceTypes { get; set; }
        public virtual IDbSet<benefitsInKind> benefitsInKinds { get; set; }
        public virtual IDbSet<bonusCalculationType> bonusCalculationTypes { get; set; }
        public virtual IDbSet<bonusType> bonusTypes { get; set; }
        public virtual IDbSet<deductionType> deductionTypes { get; set; }
        public virtual IDbSet<employmentStatu> employmentStatus { get; set; }
        public virtual IDbSet<holidayType> holidayTypes { get; set; }
        public virtual IDbSet<leaveType> leaveTypes { get; set; }
        public virtual IDbSet<level> levels { get; set; }
        public virtual IDbSet<levelAllowance> levelAllowances { get; set; }
        public virtual IDbSet<levelBenefitsInKind> levelBenefitsInKinds { get; set; }
        public virtual IDbSet<levelDeduction> levelDeductions { get; set; }
        public virtual IDbSet<levelLeave> levelLeaves { get; set; }
        public virtual IDbSet<levelNotch> levelNotches { get; set; }
        public virtual IDbSet<month> months { get; set; }
        public virtual IDbSet<oneTimeDeductionType> oneTimeDeductionTypes { get; set; }
        public virtual IDbSet<overTime> overTimes { get; set; }
        public virtual IDbSet<payCalendar> payCalendars { get; set; }
        public virtual IDbSet<payMaster> payMasters { get; set; }
        public virtual IDbSet<payMasterAllowance> payMasterAllowances { get; set; }
        public virtual IDbSet<payMasterBenefitsInKind> payMasterBenefitsInKinds { get; set; }
        public virtual IDbSet<payMasterDeduction> payMasterDeductions { get; set; }
        public virtual IDbSet<payMasterLoan> payMasterLoans { get; set; }
        public virtual IDbSet<payMasterOneTimeDeduction> payMasterOneTimeDeductions { get; set; }
        public virtual IDbSet<payMasterOverTime> payMasterOverTimes { get; set; }
        public virtual IDbSet<payMasterPension> payMasterPensions { get; set; }
        public virtual IDbSet<payMasterTax> payMasterTaxes { get; set; }
        public virtual IDbSet<payMasterTaxRelief> payMasterTaxReliefs { get; set; }
        public virtual IDbSet<payrollPostingAccount> payrollPostingAccounts { get; set; }
        public virtual IDbSet<pensionType> pensionTypes { get; set; }
        public virtual IDbSet<performanceAppraisal> performanceAppraisals { get; set; }
        public virtual IDbSet<performanceAppraisalScore> performanceAppraisalScores { get; set; }
        public virtual IDbSet<performanceAppraisalType> performanceAppraisalTypes { get; set; }
        public virtual IDbSet<performanceArea> performanceAreas { get; set; }
        public virtual IDbSet<performanceContract> performanceContracts { get; set; }
        public virtual IDbSet<performanceContractItem> performanceContractItems { get; set; }
        public virtual IDbSet<performanceContractStatu> performanceContractStatus { get; set; }
        public virtual IDbSet<performanceContractTarget> performanceContractTargets { get; set; }
        public virtual IDbSet<performanceScore> performanceScores { get; set; }
        public virtual IDbSet<publicHoliday> publicHolidays { get; set; }
        public virtual IDbSet<qualificationSubject> qualificationSubjects { get; set; }
        public virtual IDbSet<qualificationType> qualificationTypes { get; set; }
        public virtual IDbSet<relationType> relationTypes { get; set; }
        public virtual IDbSet<shift> shifts { get; set; }
        public virtual IDbSet<shiftAllowance> shiftAllowances { get; set; }
        public virtual IDbSet<staffAllowance> staffAllowances { get; set; }
        public virtual IDbSet<staffAttendance> staffAttendances { get; set; }
        public virtual IDbSet<staffBenefitsInKind> staffBenefitsInKinds { get; set; }
        public virtual IDbSet<staffCalendar> staffCalendars { get; set; }
        public virtual IDbSet<staffDaysWorked> staffDaysWorkeds { get; set; }
        public virtual IDbSet<staffDeduction> staffDeductions { get; set; }
        public virtual IDbSet<staffLeave> staffLeaves { get; set; }
        public virtual IDbSet<staffLeaveBalance> staffLeaveBalances { get; set; }
        public virtual IDbSet<staffLoan> staffLoans { get; set; }
        public virtual IDbSet<staffLoanRepayment> staffLoanRepayments { get; set; }
        public virtual IDbSet<staffLoanSchedule> staffLoanSchedules { get; set; }
        public virtual IDbSet<staffLoanType> staffLoanTypes { get; set; }
        public virtual IDbSet<staffLoanTypeLevel> staffLoanTypeLevels { get; set; }
        public virtual IDbSet<staffManager> staffManagers { get; set; }
        public virtual IDbSet<staffOneTimeDeduction> staffOneTimeDeductions { get; set; }
        public virtual IDbSet<staffPension> staffPensions { get; set; }
        public virtual IDbSet<staffPromotion> staffPromotions { get; set; }
        public virtual IDbSet<staffQualification> staffQualifications { get; set; }
        public virtual IDbSet<staffRelation> staffRelations { get; set; }
        public virtual IDbSet<staffShift> staffShifts { get; set; }
        public virtual IDbSet<staffTaxRelief> staffTaxReliefs { get; set; }
        public virtual IDbSet<taxReliefType> taxReliefTypes { get; set; }
        public virtual IDbSet<taxTable> taxTables { get; set; }
        public virtual IDbSet<year> years { get; set; }
        public virtual IDbSet<address> addresses { get; set; }
        public virtual IDbSet<addressImage> addressImages { get; set; }
        public virtual IDbSet<addressType> addressTypes { get; set; }
        public virtual IDbSet<agent> agents { get; set; }
        public virtual IDbSet<agentAddress> agentAddresses { get; set; }
        public virtual IDbSet<agentDocument> agentDocuments { get; set; }
        public virtual IDbSet<agentEmail> agentEmails { get; set; }
        public virtual IDbSet<agentImage> agentImages { get; set; }
        public virtual IDbSet<agentNextOfKin> agentNextOfKins { get; set; }
        public virtual IDbSet<agentPhone> agentPhones { get; set; }
        public virtual IDbSet<bogReportsConfig> bogReportsConfigs { get; set; }
        public virtual IDbSet<branch> branches { get; set; }
        public virtual IDbSet<businessType> businessTypes { get; set; }
        public virtual IDbSet<cashierCashupCoin> cashierCashupCoins { get; set; }
        public virtual IDbSet<cashierCashupNote> cashierCashupNotes { get; set; }
        public virtual IDbSet<cashierDisbursement> cashierDisbursements { get; set; }
        public virtual IDbSet<cashierFundCoin> cashierFundCoins { get; set; }
        public virtual IDbSet<cashierFundNote> cashierFundNotes { get; set; }
        public virtual IDbSet<cashierFundsTransfer> cashierFundsTransfers { get; set; }
        public virtual IDbSet<cashierReceipt> cashierReceipts { get; set; }
        public virtual IDbSet<cashierRemainingCoin> cashierRemainingCoins { get; set; }
        public virtual IDbSet<cashierRemainingNote> cashierRemainingNotes { get; set; }
        public virtual IDbSet<cashiersTill> cashiersTills { get; set; }
        public virtual IDbSet<cashierTransferType> cashierTransferTypes { get; set; }
        public virtual IDbSet<category> categories { get; set; }
        public virtual IDbSet<categoryCheckList> categoryCheckLists { get; set; }
        public virtual IDbSet<checkType> checkTypes { get; set; }
        public virtual IDbSet<client> clients { get; set; }
        public virtual IDbSet<clientActivityType> clientActivityTypes { get; set; }
        public virtual IDbSet<clientAddress> clientAddresses { get; set; }
        public virtual IDbSet<clientBankAccount> clientBankAccounts { get; set; }
        public virtual IDbSet<clientBusinessActivity> clientBusinessActivities { get; set; }
        public virtual IDbSet<clientCompany> clientCompanies { get; set; }
        public virtual IDbSet<clientConfig> clientConfigs { get; set; }
        public virtual IDbSet<clientDocument> clientDocuments { get; set; }
        public virtual IDbSet<clientEmail> clientEmails { get; set; }
        public virtual IDbSet<clientImage> clientImages { get; set; }
        public virtual IDbSet<clientLiability> clientLiabilities { get; set; }
        public virtual IDbSet<clientMandateType> clientMandateTypes { get; set; }
        public virtual IDbSet<clientPhone> clientPhones { get; set; }
        public virtual IDbSet<clientServiceCharge> clientServiceCharges { get; set; }
        public virtual IDbSet<clientType> clientTypes { get; set; }
        public virtual IDbSet<collateralImage> collateralImages { get; set; }
        public virtual IDbSet<collateralType> collateralTypes { get; set; }
        public virtual IDbSet<collection> collections { get; set; }
        public virtual IDbSet<config> configs { get; set; }
        public virtual IDbSet<controllerFile> controllerFiles { get; set; }
        public virtual IDbSet<def_ln_accts> def_ln_accts { get; set; }
        public virtual IDbSet<deposit> deposits { get; set; }
        public virtual IDbSet<depositAdditional> depositAdditionals { get; set; }
        public virtual IDbSet<depositCertificateConfig> depositCertificateConfigs { get; set; }
        public virtual IDbSet<depositCharge> depositCharges { get; set; }
        public virtual IDbSet<depositConfig> depositConfigs { get; set; }
        public virtual IDbSet<depositDisInvestmentConfig> depositDisInvestmentConfigs { get; set; }
        public virtual IDbSet<depositInterest> depositInterests { get; set; }
        public virtual IDbSet<depositPeriodInDay> depositPeriodInDays { get; set; }
        public virtual IDbSet<depositRepaymentMode> depositRepaymentModes { get; set; }
        public virtual IDbSet<depositSchedule> depositSchedules { get; set; }
        public virtual IDbSet<depositSignatory> depositSignatories { get; set; }
        public virtual IDbSet<depositTemplate> depositTemplates { get; set; }
        public virtual IDbSet<depositType> depositTypes { get; set; }
        public virtual IDbSet<depositTypeAllowedTenure> depositTypeAllowedTenures { get; set; }
        public virtual IDbSet<depositTypePlanRate> depositTypePlanRates { get; set; }
        public virtual IDbSet<depositWithdrawal> depositWithdrawals { get; set; }
        public virtual IDbSet<dur_type> dur_type { get; set; }
        public virtual IDbSet<email> emails { get; set; }
        public virtual IDbSet<emailType> emailTypes { get; set; }
        public virtual IDbSet<employeeCategory> employeeCategories { get; set; }
        public virtual IDbSet<employeeContractType> employeeContractTypes { get; set; }
        public virtual IDbSet<employer> employers { get; set; }
        public virtual IDbSet<employerDepartment> employerDepartments { get; set; }
        public virtual IDbSet<employerDirector> employerDirectors { get; set; }
        public virtual IDbSet<employmentType> employmentTypes { get; set; }
        public virtual IDbSet<financialType> financialTypes { get; set; }
        public virtual IDbSet<genericCheckList> genericCheckLists { get; set; }
        public virtual IDbSet<group> groups { get; set; }
        public virtual IDbSet<groupCategory> groupCategories { get; set; }
        public virtual IDbSet<groupExec> groupExecs { get; set; }
        public virtual IDbSet<idNo> idNoes { get; set; }
        public virtual IDbSet<idNoType> idNoTypes { get; set; }
        public virtual IDbSet<incentiveStructure> incentiveStructures { get; set; }
        public virtual IDbSet<industry> industries { get; set; }
        public virtual IDbSet<institution> institutions { get; set; }
        public virtual IDbSet<insuranceSetup> insuranceSetups { get; set; }
        public virtual IDbSet<interestType> interestTypes { get; set; }
        public virtual IDbSet<investment> investments { get; set; }
        public virtual IDbSet<investmentAdditional> investmentAdditionals { get; set; }
        public virtual IDbSet<investmentCharge> investmentCharges { get; set; }
        public virtual IDbSet<investmentInterest> investmentInterests { get; set; }
        public virtual IDbSet<investmentSchedule> investmentSchedules { get; set; }
        public virtual IDbSet<investmentSignatory> investmentSignatories { get; set; }
        public virtual IDbSet<investmentType> investmentTypes { get; set; }
        public virtual IDbSet<investmentWithdrawal> investmentWithdrawals { get; set; }
        public virtual IDbSet<invoiceLoan> invoiceLoans { get; set; }
        public virtual IDbSet<invoiceLoanConfig> invoiceLoanConfigs { get; set; }
        public virtual IDbSet<invoiceLoanMaster> invoiceLoanMasters { get; set; }
        public virtual IDbSet<lienReason> lienReasons { get; set; }
        public virtual IDbSet<lienReleaseReason> lienReleaseReasons { get; set; }
        public virtual IDbSet<lineOfBusiness> lineOfBusinesses { get; set; }
        public virtual IDbSet<ln_type> ln_type { get; set; }
        public virtual IDbSet<loanCheck> loanChecks { get; set; }
        public virtual IDbSet<loanCheckList> loanCheckLists { get; set; }
        public virtual IDbSet<loanClosure> loanClosures { get; set; }
        public virtual IDbSet<loanClosureReason> loanClosureReasons { get; set; }
        public virtual IDbSet<loanCollateral> loanCollaterals { get; set; }
        public virtual IDbSet<loanConfig> loanConfigs { get; set; }
        public virtual IDbSet<loanDocument> loanDocuments { get; set; }
        public virtual IDbSet<loanFee> loanFees { get; set; }
        public virtual IDbSet<loanFeeType> loanFeeTypes { get; set; }
        public virtual IDbSet<loanFinancial> loanFinancials { get; set; }
        public virtual IDbSet<loanGroupClient> loanGroupClients { get; set; }
        public virtual IDbSet<loanGurantor> loanGurantors { get; set; }
        public virtual IDbSet<loanIncentive> loanIncentives { get; set; }
        public virtual IDbSet<loanInsurance> loanInsurances { get; set; }
        public virtual IDbSet<loanIterestWriteOff> loanIterestWriteOffs { get; set; }
        public virtual IDbSet<loanProduct> loanProducts { get; set; }
        public virtual IDbSet<loanProductHistory> loanProductHistories { get; set; }
        public virtual IDbSet<loanProvision> loanProvisions { get; set; }
        public virtual IDbSet<loanPurpose> loanPurposes { get; set; }
        public virtual IDbSet<loanPurposeDetail> loanPurposeDetails { get; set; }
        public virtual IDbSet<loanRepayment> loanRepayments { get; set; }
        public virtual IDbSet<loanScheme> loanSchemes { get; set; }
        public virtual IDbSet<loanStatu> loanStatus { get; set; }
        public virtual IDbSet<loanTemplate> loanTemplates { get; set; }
        public virtual IDbSet<loanTranch> loanTranches { get; set; }
        public virtual IDbSet<loanType> loanTypes { get; set; }
        public virtual IDbSet<maritalStatu> maritalStatus { get; set; }
        public virtual IDbSet<microBusinessCategory> microBusinessCategories { get; set; }
        public virtual IDbSet<modeOfEntry> modeOfEntries { get; set; }
        public virtual IDbSet<modeOfPayment> modeOfPayments { get; set; }
        public virtual IDbSet<multiPayment> multiPayments { get; set; }
        public virtual IDbSet<multiPaymentClient> multiPaymentClients { get; set; }
        public virtual IDbSet<nextOfKin> nextOfKins { get; set; }
        public virtual IDbSet<notification> notifications { get; set; }
        public virtual IDbSet<notificationRecipient> notificationRecipients { get; set; }
        public virtual IDbSet<notificationSchedule> notificationSchedules { get; set; }
        public virtual IDbSet<ownerShipType> ownerShipTypes { get; set; }
        public virtual IDbSet<penaltyType> penaltyTypes { get; set; }
        public virtual IDbSet<phone> phones { get; set; }
        public virtual IDbSet<phoneType> phoneTypes { get; set; }
        public virtual IDbSet<prAllowance> prAllowances { get; set; }
        public virtual IDbSet<prAllowanceType> prAllowanceTypes { get; set; }
        public virtual IDbSet<prLoanDetail> prLoanDetails { get; set; }
        public virtual IDbSet<productCode> productCodes { get; set; }
        public virtual IDbSet<provisionBatch> provisionBatches { get; set; }
        public virtual IDbSet<provisionClass> provisionClasses { get; set; }
        public virtual IDbSet<region> regions { get; set; }
        public virtual IDbSet<regularSusuAccount> regularSusuAccounts { get; set; }
        public virtual IDbSet<regularSusuContribution> regularSusuContributions { get; set; }
        public virtual IDbSet<regularSusuContributionSchedule> regularSusuContributionSchedules { get; set; }
        public virtual IDbSet<regularSusuWithdrawal> regularSusuWithdrawals { get; set; }
        public virtual IDbSet<repaymentMode> repaymentModes { get; set; }
        public virtual IDbSet<repaymentSchedule> repaymentSchedules { get; set; }
        public virtual IDbSet<repaymentType> repaymentTypes { get; set; }
        public virtual IDbSet<reservationType> reservationTypes { get; set; }
        public virtual IDbSet<savingAdditional> savingAdditionals { get; set; }
        public virtual IDbSet<savingBalance> savingBalances { get; set; }
        public virtual IDbSet<savingCharge> savingCharges { get; set; }
        public virtual IDbSet<savingConfig> savingConfigs { get; set; }
        public virtual IDbSet<savingDailyInterest> savingDailyInterests { get; set; }
        public virtual IDbSet<savingInterest> savingInterests { get; set; }
        public virtual IDbSet<savingLienRelease> savingLienReleases { get; set; }
        public virtual IDbSet<savingNextOfKin> savingNextOfKins { get; set; }
        public virtual IDbSet<savingPlan> savingPlans { get; set; }
        public virtual IDbSet<savingPlanFlag> savingPlanFlags { get; set; }
        public virtual IDbSet<savingPlanInterval> savingPlanIntervals { get; set; }
        public virtual IDbSet<savingReservationTransc> savingReservationTranscs { get; set; }
        public virtual IDbSet<savingRollOver> savingRollOvers { get; set; }
        public virtual IDbSet<savingSchedule> savingSchedules { get; set; }
        public virtual IDbSet<savingSignatory> savingSignatories { get; set; }
        public virtual IDbSet<savingType> savingTypes { get; set; }
        public virtual IDbSet<savingWithdrawal> savingWithdrawals { get; set; }
        public virtual IDbSet<sector> sectors { get; set; }
        public virtual IDbSet<smeCategory> smeCategories { get; set; }
        public virtual IDbSet<smeDirector> smeDirectors { get; set; }
        public virtual IDbSet<SpecialDay> SpecialDays { get; set; }
        public virtual IDbSet<SpecialDayType> SpecialDayTypes { get; set; }
        public virtual IDbSet<staffCategoryDirector> staffCategoryDirectors { get; set; }
        public virtual IDbSet<staffSaving> staffSavings { get; set; }
        public virtual IDbSet<supplier> suppliers { get; set; }
        public virtual IDbSet<supplierContact> supplierContacts { get; set; }
        public virtual IDbSet<susuAccount> susuAccounts { get; set; }
        public virtual IDbSet<susuConfig> susuConfigs { get; set; }
        public virtual IDbSet<susuContribution> susuContributions { get; set; }
        public virtual IDbSet<susuContributionSchedule> susuContributionSchedules { get; set; }
        public virtual IDbSet<susuGradePosition> susuGradePositions { get; set; }
        public virtual IDbSet<susuGroup> susuGroups { get; set; }
        public virtual IDbSet<susuGroupHistory> susuGroupHistories { get; set; }
        public virtual IDbSet<susuPosition> susuPositions { get; set; }
        public virtual IDbSet<susuScheme> susuSchemes { get; set; }
        public virtual IDbSet<sv_type> sv_type { get; set; }
        public virtual IDbSet<systemDate> systemDates { get; set; }
        public virtual IDbSet<tenor> tenors { get; set; }
        public virtual IDbSet<tenureType> tenureTypes { get; set; }
        public virtual IDbSet<transactionType> transactionTypes { get; set; }
        public virtual IDbSet<loanPenaltyDisable> loanPenaltyDisables { get; set; }
        public virtual IDbSet<loanPenaltyEnable> loanPenaltyEnables { get; set; }
        public virtual IDbSet<staffCategory> staffCategories { get; set; }
        public virtual IDbSet<bankAccountType> bankAccountTypes { get; set; }
        public virtual IDbSet<borrowing> borrowings { get; set; }
        public virtual IDbSet<borrowingDisbursement> borrowingDisbursements { get; set; }
        public virtual IDbSet<borrowingDocument> borrowingDocuments { get; set; }
        public virtual IDbSet<borrowingFee> borrowingFees { get; set; }
        public virtual IDbSet<borrowingFeeType> borrowingFeeTypes { get; set; }
        public virtual IDbSet<borrowingPenalty> borrowingPenalties { get; set; }
        public virtual IDbSet<borrowingRepayment> borrowingRepayments { get; set; }
        public virtual IDbSet<borrowingRepaymentSchedule> borrowingRepaymentSchedules { get; set; }
        public virtual IDbSet<borrowingType> borrowingTypes { get; set; }
        public virtual IDbSet<loanAdditionalInfo> loanAdditionalInfoes { get; set; }
        public virtual IDbSet<loanApproval> loanApprovals { get; set; }
        public virtual IDbSet<loanApprovalStage> loanApprovalStages { get; set; }
        public virtual IDbSet<loanApprovalStageOfficer> loanApprovalStageOfficers { get; set; }
        public virtual IDbSet<loanDocumentPlaceHolderType> loanDocumentPlaceHolderTypes { get; set; }
        public virtual IDbSet<loanDocumentTemplate> loanDocumentTemplates { get; set; }
        public virtual IDbSet<loanDocumentTemplatePage> loanDocumentTemplatePages { get; set; }
        public virtual IDbSet<loanDocumentTemplatePagePlaceHolder> loanDocumentTemplatePagePlaceHolders { get; set; }
        public virtual IDbSet<metaDataType> metaDataTypes { get; set; }
        public virtual IDbSet<accountsSystemDateChange> accountsSystemDateChanges { get; set; }
        public virtual IDbSet<clientInvestmentReceipt> clientInvestmentReceipts { get; set; }
        public virtual IDbSet<currencyNoteType> currencyNoteTypes { get; set; }
        public virtual IDbSet<defaultAction> defaultActions { get; set; }
        public virtual IDbSet<depositAuthorization> depositAuthorizations { get; set; }
        public virtual IDbSet<depositNextOfKin> depositNextOfKins { get; set; }
        public virtual IDbSet<depositSystemDateChange> depositSystemDateChanges { get; set; }
        public virtual IDbSet<employeeDepartment> employeeDepartments { get; set; }
        public virtual IDbSet<loanGroupDay> loanGroupDays { get; set; }
        public virtual IDbSet<loanMetaData> loanMetaDatas { get; set; }
        public virtual IDbSet<privateCompanyStaffAddress> privateCompanyStaffAddresses { get; set; }
        public virtual IDbSet<privateCompanyStaffVerification> privateCompanyStaffVerifications { get; set; }
        public virtual IDbSet<relationshipType> relationshipTypes { get; set; }
        public virtual IDbSet<savingSystemDateChange> savingSystemDateChanges { get; set; }
        public virtual IDbSet<susuSystemDateChange> susuSystemDateChanges { get; set; }
        public virtual IDbSet<treasuryBillRate> treasuryBillRates { get; set; }
        public virtual IDbSet<creditUnionSystemDateChange> creditUnionSystemDateChanges { get; set; }
        public virtual IDbSet<investmentSystemDateChange> investmentSystemDateChanges { get; set; }
        public virtual IDbSet<loan> loans { get; set; }
        public virtual IDbSet<loanSystemDateChange> loanSystemDateChanges { get; set; }
        public virtual IDbSet<privateCompanyStaff> privateCompanyStaffs { get; set; }
        public virtual IDbSet<cashiersTillDay> cashiersTillDays { get; set; }
        public virtual IDbSet<staffCategory1> staffCategory1 { get; set; }
        public virtual IDbSet<loanGroup> loanGroups { get; set; }
        public virtual IDbSet<depositRateUpgrade> depositRateUpgrades { get; set; }
        public virtual IDbSet<document> documents { get; set; }
        public virtual IDbSet<image> images { get; set; }
        public virtual IDbSet<savingLien> savingLiens { get; set; }
        public virtual IDbSet<cashierCashup> cashierCashups { get; set; }
        public virtual IDbSet<cashierFund> cashierFunds { get; set; }
        public virtual IDbSet<id_prof> id_prof { get; set; }
        public virtual IDbSet<chargeTypeTier> chargeTypeTiers { get; set; }
        public virtual IDbSet<overTimeConfig> overTimeConfigs { get; set; }
        public virtual IDbSet<staffBenefit> staffBenefits { get; set; }
        public virtual IDbSet<staff> staffs { get; set; }
        public virtual IDbSet<vwOutstandingLoan> vwOutstandingLoans { get; set; }
        public virtual IDbSet<staffOvertime> staffOvertimes { get; set; }
        public virtual IDbSet<controllerRemark> controllerRemarks { get; set; }
        public virtual IDbSet<controllerRepaymentType> controllerRepaymentTypes { get; set; }
        public virtual IDbSet<loanNo_by_staffID> loanNo_by_staffID { get; set; }
        public virtual IDbSet<vw_controllerFile_outstandingLoan> vw_controllerFile_outstandingLoan { get; set; }
        public virtual IDbSet<chargeType> chargeTypes { get; set; }
        public virtual IDbSet<loanPenalty> loanPenalties { get; set; }
        public virtual IDbSet<saving> savings { get; set; }
        public virtual IDbSet<cashierTillConfig> cashierTillConfigs { get; set; }
        public virtual IDbSet<cashierTillConfigDetail> cashierTillConfigDetails { get; set; }
        public virtual IDbSet<vwActiveClient> vwActiveClients { get; set; }
        public virtual IDbSet<vwFlaggedClient> vwFlaggedClients { get; set; }
        public virtual IDbSet<cashierTransactionReceipt> cashierTransactionReceipts { get; set; }
        public virtual IDbSet<cashierTransactionReceiptCurrency> cashierTransactionReceiptCurrencies { get; set; }
        public virtual IDbSet<cashierTransactionWithdrawal> cashierTransactionWithdrawals { get; set; }
        public virtual IDbSet<cashierTransactionWithdrawalCurrency> cashierTransactionWithdrawalCurrencies { get; set; }
        public virtual IDbSet<clientActivityLog> clientActivityLogs { get; set; }
        public virtual IDbSet<clientInvestmentReceiptDetail> clientInvestmentReceiptDetails { get; set; }
        public virtual IDbSet<controllerFileDetail> controllerFileDetails { get; set; }
        public virtual IDbSet<depositUpgrade> depositUpgrades { get; set; }
        public virtual IDbSet<susuGrade> susuGrades { get; set; }
        public virtual IDbSet<currencyNote> currencyNotes { get; set; }
    
        public virtual int initAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initAccounts");
        }
    
        public virtual int initClient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initClient");
        }
    
        public virtual int initJournal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initJournal");
        }
    
        public virtual int initLoan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initLoan");
        }
    
        public virtual int initAsset()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initAsset");
        }
    
        public virtual int initStaff()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("initStaff");
        }
    
        public virtual ObjectResult<getCollection_Result> getCollection(Nullable<int> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCollection_Result>("getCollection", monthParameter);
        }
    
        public virtual int getDailyTransactionReportByBranch(Nullable<int> branchId, Nullable<System.DateTime> transactiondate)
        {
            var branchIdParameter = branchId.HasValue ?
                new ObjectParameter("branchId", branchId) :
                new ObjectParameter("branchId", typeof(int));
    
            var transactiondateParameter = transactiondate.HasValue ?
                new ObjectParameter("transactiondate", transactiondate) :
                new ObjectParameter("transactiondate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getDailyTransactionReportByBranch", branchIdParameter, transactiondateParameter);
        }
    
        public virtual int getInvestmentReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getInvestmentReport", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<getLoanBalanceByProduct_Result> getLoanBalanceByProduct(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLoanBalanceByProduct_Result>("getLoanBalanceByProduct", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> sp_attempt_deposit(Nullable<int> savingId, Nullable<double> savingAmount, string reservedBy, Nullable<System.DateTime> savingDate, Nullable<int> bankId, string checkNo, Nullable<int> modeOfPaymentId, string naration, string transactionId, ObjectParameter savingAdditionalId)
        {
            var savingIdParameter = savingId.HasValue ?
                new ObjectParameter("savingId", savingId) :
                new ObjectParameter("savingId", typeof(int));
    
            var savingAmountParameter = savingAmount.HasValue ?
                new ObjectParameter("savingAmount", savingAmount) :
                new ObjectParameter("savingAmount", typeof(double));
    
            var reservedByParameter = reservedBy != null ?
                new ObjectParameter("reservedBy", reservedBy) :
                new ObjectParameter("reservedBy", typeof(string));
    
            var savingDateParameter = savingDate.HasValue ?
                new ObjectParameter("savingDate", savingDate) :
                new ObjectParameter("savingDate", typeof(System.DateTime));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("bankId", bankId) :
                new ObjectParameter("bankId", typeof(int));
    
            var checkNoParameter = checkNo != null ?
                new ObjectParameter("checkNo", checkNo) :
                new ObjectParameter("checkNo", typeof(string));
    
            var modeOfPaymentIdParameter = modeOfPaymentId.HasValue ?
                new ObjectParameter("modeOfPaymentId", modeOfPaymentId) :
                new ObjectParameter("modeOfPaymentId", typeof(int));
    
            var narationParameter = naration != null ?
                new ObjectParameter("naration", naration) :
                new ObjectParameter("naration", typeof(string));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_attempt_deposit", savingIdParameter, savingAmountParameter, reservedByParameter, savingDateParameter, bankIdParameter, checkNoParameter, modeOfPaymentIdParameter, narationParameter, transactionIdParameter, savingAdditionalId);
        }
    
        public virtual ObjectResult<string> sp_attempt_reservation(Nullable<int> savingId, Nullable<double> amount, Nullable<int> reservationTypeId, string reservedBy, string naration, ObjectParameter transactionId)
        {
            var savingIdParameter = savingId.HasValue ?
                new ObjectParameter("savingId", savingId) :
                new ObjectParameter("savingId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(double));
    
            var reservationTypeIdParameter = reservationTypeId.HasValue ?
                new ObjectParameter("reservationTypeId", reservationTypeId) :
                new ObjectParameter("reservationTypeId", typeof(int));
    
            var reservedByParameter = reservedBy != null ?
                new ObjectParameter("reservedBy", reservedBy) :
                new ObjectParameter("reservedBy", typeof(string));
    
            var narationParameter = naration != null ?
                new ObjectParameter("naration", naration) :
                new ObjectParameter("naration", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_attempt_reservation", savingIdParameter, amountParameter, reservationTypeIdParameter, reservedByParameter, narationParameter, transactionId);
        }
    
        public virtual ObjectResult<string> sp_withdraw_fund(Nullable<int> savingId, Nullable<double> interestWithdrawal, Nullable<double> principalWithdrawal, string reservedBy, Nullable<System.DateTime> withdrawalDate, Nullable<int> bankId, string checkNo, Nullable<int> modeOfPaymentId, string naration, string transactionId)
        {
            var savingIdParameter = savingId.HasValue ?
                new ObjectParameter("savingId", savingId) :
                new ObjectParameter("savingId", typeof(int));
    
            var interestWithdrawalParameter = interestWithdrawal.HasValue ?
                new ObjectParameter("interestWithdrawal", interestWithdrawal) :
                new ObjectParameter("interestWithdrawal", typeof(double));
    
            var principalWithdrawalParameter = principalWithdrawal.HasValue ?
                new ObjectParameter("principalWithdrawal", principalWithdrawal) :
                new ObjectParameter("principalWithdrawal", typeof(double));
    
            var reservedByParameter = reservedBy != null ?
                new ObjectParameter("reservedBy", reservedBy) :
                new ObjectParameter("reservedBy", typeof(string));
    
            var withdrawalDateParameter = withdrawalDate.HasValue ?
                new ObjectParameter("withdrawalDate", withdrawalDate) :
                new ObjectParameter("withdrawalDate", typeof(System.DateTime));
    
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("bankId", bankId) :
                new ObjectParameter("bankId", typeof(int));
    
            var checkNoParameter = checkNo != null ?
                new ObjectParameter("checkNo", checkNo) :
                new ObjectParameter("checkNo", typeof(string));
    
            var modeOfPaymentIdParameter = modeOfPaymentId.HasValue ?
                new ObjectParameter("modeOfPaymentId", modeOfPaymentId) :
                new ObjectParameter("modeOfPaymentId", typeof(int));
    
            var narationParameter = naration != null ?
                new ObjectParameter("naration", naration) :
                new ObjectParameter("naration", typeof(string));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("transactionId", transactionId) :
                new ObjectParameter("transactionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_withdraw_fund", savingIdParameter, interestWithdrawalParameter, principalWithdrawalParameter, reservedByParameter, withdrawalDateParameter, bankIdParameter, checkNoParameter, modeOfPaymentIdParameter, narationParameter, transactionIdParameter);
        }
    }
}
