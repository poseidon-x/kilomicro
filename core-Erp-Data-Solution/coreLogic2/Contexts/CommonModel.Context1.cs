//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace coreLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class core_dbEntities : DbContext, Icore_dbEntities
    {
        public core_dbEntities()
            : base("name=core_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual IDbSet<currencies> currencies { get; set; }
        public virtual IDbSet<past_currency_rates> past_currency_rates { get; set; }
        public virtual IDbSet<ou_cat> ou_cat { get; set; }
        public virtual IDbSet<ou> ou { get; set; }
        public virtual IDbSet<acct_cats> acct_cats { get; set; }
        public virtual IDbSet<acct_heads> acct_heads { get; set; }
        public virtual IDbSet<accts> accts { get; set; }
        public virtual IDbSet<cities> cities { get; set; }
        public virtual IDbSet<countries> countries { get; set; }
        public virtual IDbSet<districts> districts { get; set; }
        public virtual IDbSet<locations> locations { get; set; }
        public virtual IDbSet<regions> regions { get; set; }
        public virtual IDbSet<gl_ou> gl_ou { get; set; }
        public virtual IDbSet<gl_ou_cat> gl_ou_cat { get; set; }
        public virtual IDbSet<bank_branches> bank_branches { get; set; }
        public virtual IDbSet<banks> banks { get; set; }
        public virtual IDbSet<addr_types> addr_types { get; set; }
        public virtual IDbSet<phon_types> phon_types { get; set; }
        public virtual IDbSet<cust_addr> cust_addr { get; set; }
        public virtual IDbSet<cust_phons> cust_phons { get; set; }
        public virtual IDbSet<cust_types> cust_types { get; set; }
        public virtual IDbSet<custs> custs { get; set; }
        public virtual IDbSet<sup_addr> sup_addr { get; set; }
        public virtual IDbSet<sup_phons> sup_phons { get; set; }
        public virtual IDbSet<sup_types> sup_types { get; set; }
        public virtual IDbSet<sups> sups { get; set; }
        public virtual IDbSet<jnl_batch_tmp> jnl_batch_tmp { get; set; }
        public virtual IDbSet<jnl_tmp> jnl_tmp { get; set; }
        public virtual IDbSet<vw_accounts> vw_accounts { get; set; }
        public virtual IDbSet<vw_gl_ou> vw_gl_ou { get; set; }
        public virtual IDbSet<vw_ou> vw_ou { get; set; }
        public virtual IDbSet<vw_jnl_tmp> vw_jnl_tmp { get; set; }
        public virtual IDbSet<sys_no> sys_no { get; set; }
        public virtual IDbSet<comp_prof> comp_prof { get; set; }
        public virtual IDbSet<user_gl_ou_gl_ou> user_gl_ou_gl_ou { get; set; }
        public virtual IDbSet<vw_cities> vw_cities { get; set; }
        public virtual IDbSet<jnl_batch> jnl_batch { get; set; }
        public virtual IDbSet<vw_jnl> vw_jnl { get; set; }
        public virtual IDbSet<def_accts> def_accts { get; set; }
        public virtual IDbSet<acct_period> acct_period { get; set; }
        public virtual IDbSet<def_acct_names> def_acct_names { get; set; }
        public virtual IDbSet<acct_bals> acct_bals { get; set; }
        public virtual IDbSet<budget> budgets { get; set; }
        public virtual IDbSet<interfacePreference> interfacePreferences { get; set; }
        public virtual IDbSet<roleMenu> roleMenu { get; set; }
        public virtual IDbSet<roleMenuItem> roleMenuItem { get; set; }
        public virtual IDbSet<bank_accts> bank_accts { get; set; }
        public virtual IDbSet<jnl> jnl { get; set; }
    
        public virtual int change_acc_parent(string sourceType, string destType, Nullable<int> sourceID, Nullable<int> destID)
        {
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("sourceType", sourceType) :
                new ObjectParameter("sourceType", typeof(string));
    
            var destTypeParameter = destType != null ?
                new ObjectParameter("destType", destType) :
                new ObjectParameter("destType", typeof(string));
    
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("sourceID", sourceID) :
                new ObjectParameter("sourceID", typeof(int));
    
            var destIDParameter = destID.HasValue ?
                new ObjectParameter("destID", destID) :
                new ObjectParameter("destID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_acc_parent", sourceTypeParameter, destTypeParameter, sourceIDParameter, destIDParameter);
        }
    
        public virtual int close_period(Nullable<int> accPeriod, Nullable<System.DateTime> closeDate)
        {
            var accPeriodParameter = accPeriod.HasValue ?
                new ObjectParameter("accPeriod", accPeriod) :
                new ObjectParameter("accPeriod", typeof(int));
    
            var closeDateParameter = closeDate.HasValue ?
                new ObjectParameter("closeDate", closeDate) :
                new ObjectParameter("closeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("close_period", accPeriodParameter, closeDateParameter);
        }
    
        public virtual int open_period(Nullable<int> accPeriod, Nullable<System.DateTime> closeDate)
        {
            var accPeriodParameter = accPeriod.HasValue ?
                new ObjectParameter("accPeriod", accPeriod) :
                new ObjectParameter("accPeriod", typeof(int));
    
            var closeDateParameter = closeDate.HasValue ?
                new ObjectParameter("closeDate", closeDate) :
                new ObjectParameter("closeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("open_period", accPeriodParameter, closeDateParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> get_acc_bal(Nullable<int> acct_id, Nullable<System.DateTime> date, Nullable<int> cost_center_id)
        {
            var acct_idParameter = acct_id.HasValue ?
                new ObjectParameter("acct_id", acct_id) :
                new ObjectParameter("acct_id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var cost_center_idParameter = cost_center_id.HasValue ?
                new ObjectParameter("cost_center_id", cost_center_id) :
                new ObjectParameter("cost_center_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("get_acc_bal", acct_idParameter, dateParameter, cost_center_idParameter);
        }
    }
}
