//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace coreLogic
{
    using System;
    using System.Collections.Generic;
    
     // Condition: ^[^v].*Type$
    public interface IdepositType
    {
        int depositTypeID { get; set; }
        string depositTypeName { get; set; }
        double interestRate { get; set; }
        int defaultPeriod { get; set; }
        bool allowsInterestWithdrawal { get; set; }
        bool allowsPrincipalWithdrawal { get; set; }
        Nullable<int> vaultAccountID { get; set; }
        Nullable<int> accountsPayableAccountID { get; set; }
        Nullable<int> interestExpenseAccountID { get; set; }
        int fxUnrealizedGainLossAccountID { get; set; }
        int fxRealizedGainLossAccountID { get; set; }
        int interestCalculationScheduleID { get; set; }
        Nullable<int> chargesIncomeAccountID { get; set; }
        Nullable<int> interestPayableAccountID { get; set; }
        bool fixedRate { get; set; }
        bool upgradeable { get; set; }
        double upgradeMinimumAmount { get; set; }
        int ordinal { get; set; }
        bool allowAdditionalDeposit { get; set; }
        bool isCompoundInterest { get; set; }
        bool depositInterestUpgradeable { get; set; }
    
        ICollection<Ideposit> deposits { get; set; }
        ICollection<IdepositTypeAllowedTenure> depositTypeAllowedTenures { get; set; }
        ICollection<IdepositTypePlanRate> depositTypePlanRates { get; set; }
        ICollection<IdepositUpgrade> depositUpgrades { get; set; }
        ICollection<IdepositUpgrade> depositUpgrades1 { get; set; }
    } 
    
}
